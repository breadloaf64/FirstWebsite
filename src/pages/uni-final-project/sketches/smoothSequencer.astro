---
import UniFinalProjectSketch from '../../../layouts/UniFinalProjectSketch.astro'

const sketchScriptSRCs = [
	'Main.js',
	'Styling.js',
	'Sound.js',
	'Drawing.js',
	'Button.js',
	'Sequence.js',
	'Gyroscope.js',
	'WebsiteMobileSetup.js',
]
---

<UniFinalProjectSketch
	title="Smooth Sequencer"
	description="Use your finger/mouse to draw yourself a melody."
	usesSound={true}
>
	{
		sketchScriptSRCs.map((sketchScriptSrc) => (
			<script
				slot="scripts"
				is:inline
				src={sketchScriptSrc}
				type="text/javascript"
			/>
		))
	}
	<section>
		<p>
			I began with a very simple implementation of pitch sequencing - by
			defining an array, which holds a y value for every pixel x along the width
			of the sketch. As the playhead wipes along the screen, the y value for the
			x value of the playhead is mapped linearly to frequencies.
		</p>
		<p>
			The problem with this approach is that it doesn't support rests, i.e. gaps
			in the sequence where no note is playing, nor does it support polyphony,
			i.e. more than one note playing at once. Both of these features are
			important for music sequencing, thus the final application should use a
			more advanced system!
		</p>
		<p>
			A fun interaction I added was using the mouse (or tilt, for mobile)
			controlling the speed of playback. This allows the user to control tempo
			in a way that I've never seen before in music production software.
		</p>
	</section>
</UniFinalProjectSketch>
